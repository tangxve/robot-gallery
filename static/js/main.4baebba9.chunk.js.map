{"version":3,"sources":["components/AddToCart.tsx","AppState.tsx","components/Robots.tsx","components/RobotDiscount.tsx","assets/images/logo.svg","components/ShoppingCart.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.css","components/Robot.module.css","components/ShoppingCart.module.css"],"names":["ChildComponent","defaultContextValue","username","shoppingCart","items","appContext","React","createContext","appSetStateContext","undefined","AppStateProvider","props","useState","state","setState","Provider","value","children","withAddToCart","id","name","email","addToCart","useContext","className","styles","cardContainer","alt","src","onClick","RobotDiscount","useAddToCart","ShoppingCart","isOpen","setIsOpen","cartContainer","button","e","length","cartDropDown","style","display","map","i","k","App","count","setCount","robotGallery","setRobotGallery","loading","setLoading","error","setError","useEffect","document","title","console","log","fetchData","a","fetch","res","json","data","message","app","appHeader","appLogo","logo","robotList","r","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4baebba9.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { appSetStateContext } from '../AppState'\nimport { RobotProps, AddToCartFn } from './Robots'\n\n// 高阶函数 withXxx\nexport const withAddToCart = (ChildComponent: React.ComponentType<RobotProps>) => {\n  // return class extends React.Component<any, any>\n\n  return (props: RobotProps) => {\n    const setState = useContext(appSetStateContext)\n\n    const addToCart: AddToCartFn = (id, name) => {\n      if (setState) {\n        setState((state: any) => {\n          return {\n            ...state,\n            shoppingCart: {\n              items: [...state.shoppingCart.items, { id, name }]\n            }\n          }\n        })\n      }\n    }\n    return <ChildComponent {...props as RobotProps} addToCart={addToCart} />\n  }\n}\n\n\n// 自定义 hook  useXxxx\nexport const useAddToCart = () => {\n  const setState = useContext(appSetStateContext)\n\n  const addToCart: AddToCartFn = (id, name) => {\n    if (setState) {\n      setState((state: any) => {\n        return {\n          ...state,\n          shoppingCart: {\n            items: [...state.shoppingCart.items, { id, name }]\n          }\n        }\n      })\n    }\n  }\n  return addToCart\n}\n","import React, { useState } from 'react'\n\ninterface AppStateValue {\n  username: string\n  shoppingCart: { items: { id: number, name: string }[] }\n}\n\nconst defaultContextValue: AppStateValue = {\n  username: '德玛西亚',\n  shoppingCart: { items: [] }\n}\n\nexport const appContext = React.createContext(defaultContextValue)\nexport const appSetStateContext = React.createContext<React.Dispatch<React.SetStateAction<AppStateValue>> | undefined>(undefined)\n\nexport const AppStateProvider: React.FC = (props) => {\n\n  const [state, setState] = useState(defaultContextValue)\n\n  return (\n    <appContext.Provider value={state}>\n      <appSetStateContext.Provider value={setState}>\n        {props.children}\n      </appSetStateContext.Provider>\n    </appContext.Provider>\n  )\n}\n","import React, { useContext } from 'react'\nimport styles from './Robot.module.css'\nimport { appContext, appSetStateContext } from '../AppState'\nimport { withAddToCart } from './AddToCart'\n\nexport interface RobotProps<T = number | string> {\n  id: T,\n  name: string,\n  email: string\n  addToCart?: AddToCartFn\n}\n\nexport interface AddToCartFn {\n  (id: number | string, name: string): void\n}\n\n// React.FC = functional component 函数组件的缩写，代表是函数式组件的接口\n// 接口接受一个泛型类型 P , P 就是 props; FC<P = {}> = FunctionComponent<P>;\nconst Robot: React.FC<RobotProps> = ({ id, name, email, addToCart }) => {\n  const value = useContext(appContext)\n  return (\n    <div className={styles.cardContainer}>\n      <img alt=\"robot\" src={`https://robohash.org/${id}`} />\n      <h2>{name}</h2>\n      <p>{email}</p>\n      <p>作者：{value.username}</p>\n      <button onClick={() => addToCart?.(id, name)}>加入购物车\n      </button>\n    </div>\n  )\n}\n\nexport default withAddToCart(Robot)\n","import React, { useContext } from 'react'\nimport styles from './Robot.module.css'\nimport { appContext, appSetStateContext } from '../AppState'\nimport { useAddToCart } from './AddToCart'\nimport { RobotProps } from './Robots'\n\n// React.FC = functional component 函数组件的缩写，代表是函数式组件的接口\n// 接口接受一个泛型类型 P , P 就是 props; FC<P = {}> = FunctionComponent<P>;\nconst RobotDiscount: React.FC<RobotProps> = ({ id, name, email }) => {\n  const value = useContext(appContext)\n  const addToCart = useAddToCart()\n  return (\n    <div className={styles.cardContainer}>\n      <img alt=\"robot\" src={`https://robohash.org/${id}`} />\n      <h2>打折商品</h2>\n      <h2>{name}</h2>\n      <p>{email}</p>\n      <p>作者：{value.username}</p>\n      <button onClick={() => {addToCart?.(id, name)}}>加入购物车\n      </button>\n    </div>\n  )\n}\n\nexport default RobotDiscount\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useContext, useState } from 'react'\nimport styles from './ShoppingCart.module.css'\nimport { appContext, appSetStateContext } from '../AppState'\n\ninterface Props {}\n\nconst ShoppingCart: React.FC<Props> = (props) => {\n\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const value = useContext(appContext)\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <div className={styles.cartContainer}>\n      <button className={styles.button} onClick={handleClick}>\n        <span>购物车 {value.shoppingCart.items.length} 件</span>\n      </button>\n      <div className={styles.cartDropDown} style={{ display: isOpen ? 'block' : 'none' }}>\n        <ul>\n          {value.shoppingCart.items.map((i, k) => <li key={k}>{i.name}</li>)}\n        </ul>\n      </div>\n    </div>\n  )\n}\nexport default ShoppingCart\n\n/**\n *\n class ShoppingCart extends React.Component<Props, State> {\n  // * 生命周期第一阶段：初始化\n  // 构建函数 constructor 是唯一可以初始化 state 的地方\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    console.log('e.target', e.target)\n    console.log('e.currentTarget', e.currentTarget)\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n\n  render() {\n    return (\n      <div className={styles.cartContainer}>\n        <button\n          className={styles.button}\n          onClick={this.handleClick}\n        >购物车 2 件\n        </button>\n        <div\n          className={styles.cartDropDown}\n          style={{\n            display: this.state.isOpen ? 'block' : 'none'\n          }}\n        >\n          <ul>\n            <li>robot 1</li>\n            <li>robot 1</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n */\n\n","import React, { useState, useEffect } from 'react'\nimport robots from './mockdata/robots.json'\nimport Robot from './components/Robots'\nimport RobotDiscount from './components/RobotDiscount'\nimport logo from './assets/images/logo.svg'\n// import './App.module.css'\n// 通过对象的方式引入进来，防止命名冲突\nimport styles from './App.module.css'\nimport ShoppingCart from './components/ShoppingCart'\n\ninterface Props {}\n\ninterface State {\n  robotGallery: any[]\n}\n\nconst App: React.FC = (props) => {\n  const [count, setCount] = useState<number>(0)\n  const [robotGallery, setRobotGallery] = useState<any[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [error, setError] = useState<string>('')\n\n  useEffect(() => {\n    document.title = '点击' + count\n    console.log('useEffect3333')\n  }, [count])\n\n  useEffect(() => {\n    setLoading(true)\n    const fetchData = async () => {\n      try {\n\n        const res = await fetch('https://jsonplaceholder.typicode.com/users')\n        // .then(res => res.json())\n        // .then(data => setRobotGallery(data))\n\n        const data = await res.json()\n\n        setRobotGallery(data)\n      } catch (e: any) {\n        setError(e.message)\n      }\n      setLoading(false)\n    }\n\n    fetchData()\n  }, []) // 空数组相当于 componentDidMount\n\n  // useEffect(() => {\n  //   console.log('useEffect11111')\n  // }) 类似于 componentDidUpdate\n  //\n  // useEffect(() => {\n  //   console.log('useEffect4444')\n  // }, [count, robotGallery])\n\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.appHeader}>\n        <img className={styles.appLogo} src={logo} alt=\"logo\" />\n        <h1>机器人购物平台</h1>\n      </div>\n      <button\n        onClick={() => {\n          setCount(count + 1)\n        }\n        }>购物车\n      </button>\n      <span>{count}</span>\n      <ShoppingCart />\n      {\n        !error || error !== '' && <div>错误信息：{error}</div>\n      }\n      {!loading\n       ? <div className={styles.robotList}>\n         {robotGallery.map((r, i) => (\n           i % 2 === 0\n           ? (<RobotDiscount key={r.id} id={r.id} name={r.name} email={r.email} />)\n           : (<Robot key={r.id} id={r.id} name={r.name} email={r.email} />)\n         ))}\n       </div>\n       : (<h2>loading....</h2>)\n      }\n    </div>\n  )\n\n}\n\nexport default App\n/**\n * class 组件\n\n class App extends React.Component<Props, State> {\n  // * 生命周期第一阶段：初始化\n  // 初始化组件 state\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      robotGallery: []\n    }\n  }\n\n  // 在组件创建好dom元素以后，挂载进页面的时候调用，只会调用一次\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then((data) => this.setState({ robotGallery: data }))\n  }\n\n  // * 生命周期第二个阶段：更新\n  // 在组件接收一个新的 prop（更新后）时被调用\n  // 已经被废弃（会产生副作用）\n  // componentWillReceiveProps(nextProps: Readonly<Props>, nextContext: any) {}\n\n  // 组件初始化和组件更新的时候被调用\n  // static getDerivedStateFromProps(props, state)\n\n  // 判断是否更新，返回一个布尔值\n  // shouldComponentUpdate(nextProps, nextState, nextContext: any): boolean {\n  //  return nextState.name !== this.state.name\n  // }\n\n\n  // 组件更新后调用 组件发生更新，UI重新渲染整个函数会被调用\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>, snapshot?: any) {}\n\n  // * 生命周期第三个阶段：销毁\n  // 组件销毁后调用\n  // 这个函数可以回收各种监听以及事件，用来防止可能存在内存泄漏\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <div className={styles.appHeader}>\n          <img className={styles.appLogo} src={logo} alt=\"logo\" />\n          <h1>机器人购物平台</h1>\n        </div>\n        <ShoppingCart />\n        <div className={styles.robotList}>\n          {this.state.robotGallery.map(r => (\n            <Robot key={r.id} id={r.id} name={r.name} email={r.email} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n\n}\n\n export default App\n */\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { AppStateProvider } from './AppState'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppStateProvider>\n      <App />\n    </AppStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"appHeader\":\"App_appHeader__28RXF\",\"appLogo\":\"App_appLogo__1qg7-\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"robotList\":\"App_robotList__zTHhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Robot_cardContainer__19gp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartContainer\":\"ShoppingCart_cartContainer__1Gl09\",\"cartDropDown\":\"ShoppingCart_cartDropDown__23j9i\",\"button\":\"ShoppingCart_button__3vzc4\"};"],"sourceRoot":""}